// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  DOCTOR
  USER
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

model User {
  id         String   @id @default(uuid())
  email      String   @unique
  name       String?
  role       Role     @default(USER)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  doctor     Doctor?  @relation("UserDoctor")
}

model Doctor {
  id           String   @id @default(uuid())
  name         String
  education    String?
  specialties  String[] // Postgres array
  experienceYr Int?
  imageUrl     String?
  contact      String?
  remarks      String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  userId       String?  @unique
  user         User?    @relation("UserDoctor", fields: [userId], references: [id])
  visits       Visit[]
}

model Patient {
  id         String   @id @default(uuid())
  name       String
  dob        DateTime
  gender     Gender?
  phone      String?
  email      String?  @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  visits     Visit[]
}

model Visit {
  id         String   @id @default(uuid())
  patientId  String
  doctorId   String?
  date       DateTime @default(now())
  notes      String
  treatment  String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  patient    Patient  @relation(fields: [patientId], references: [id])
  doctor     Doctor?  @relation(fields: [doctorId], references: [id])
}

model Medicine {
  id          String   @id @default(uuid())
  name        String   @unique
  synonyms    String[]  // array of alternate names
  atcCode     String?   // optional ATC code
  indications String[]  // array of indications
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}